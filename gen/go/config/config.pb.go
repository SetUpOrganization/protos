// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: config/config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           string                 `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Gpu           string                 `protobuf:"bytes,2,opt,name=gpu,proto3" json:"gpu,omitempty"`
	MotherBoard   string                 `protobuf:"bytes,3,opt,name=mother_board,json=motherBoard,proto3" json:"mother_board,omitempty"`
	Ram           string                 `protobuf:"bytes,4,opt,name=ram,proto3" json:"ram,omitempty"`
	Case          string                 `protobuf:"bytes,5,opt,name=case,proto3" json:"case,omitempty"`
	Fans          string                 `protobuf:"bytes,6,opt,name=fans,proto3" json:"fans,omitempty"`
	CpuCooler     string                 `protobuf:"bytes,7,opt,name=cpu_cooler,json=cpuCooler,proto3" json:"cpu_cooler,omitempty"`
	Psu           string                 `protobuf:"bytes,8,opt,name=psu,proto3" json:"psu,omitempty"`
	Storage       string                 `protobuf:"bytes,9,opt,name=storage,proto3" json:"storage,omitempty"`
	Mouse         string                 `protobuf:"bytes,10,opt,name=mouse,proto3" json:"mouse,omitempty"`
	Keyboard      string                 `protobuf:"bytes,11,opt,name=keyboard,proto3" json:"keyboard,omitempty"`
	Monitor       string                 `protobuf:"bytes,12,opt,name=monitor,proto3" json:"monitor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigMsg) Reset() {
	*x = ConfigMsg{}
	mi := &file_config_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMsg) ProtoMessage() {}

func (x *ConfigMsg) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMsg.ProtoReflect.Descriptor instead.
func (*ConfigMsg) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigMsg) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *ConfigMsg) GetGpu() string {
	if x != nil {
		return x.Gpu
	}
	return ""
}

func (x *ConfigMsg) GetMotherBoard() string {
	if x != nil {
		return x.MotherBoard
	}
	return ""
}

func (x *ConfigMsg) GetRam() string {
	if x != nil {
		return x.Ram
	}
	return ""
}

func (x *ConfigMsg) GetCase() string {
	if x != nil {
		return x.Case
	}
	return ""
}

func (x *ConfigMsg) GetFans() string {
	if x != nil {
		return x.Fans
	}
	return ""
}

func (x *ConfigMsg) GetCpuCooler() string {
	if x != nil {
		return x.CpuCooler
	}
	return ""
}

func (x *ConfigMsg) GetPsu() string {
	if x != nil {
		return x.Psu
	}
	return ""
}

func (x *ConfigMsg) GetStorage() string {
	if x != nil {
		return x.Storage
	}
	return ""
}

func (x *ConfigMsg) GetMouse() string {
	if x != nil {
		return x.Mouse
	}
	return ""
}

func (x *ConfigMsg) GetKeyboard() string {
	if x != nil {
		return x.Keyboard
	}
	return ""
}

func (x *ConfigMsg) GetMonitor() string {
	if x != nil {
		return x.Monitor
	}
	return ""
}

type ConfigMsgFull struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Cpu             string                 `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Gpu             string                 `protobuf:"bytes,2,opt,name=gpu,proto3" json:"gpu,omitempty"`
	MotherBoard     string                 `protobuf:"bytes,3,opt,name=mother_board,json=motherBoard,proto3" json:"mother_board,omitempty"`
	Ram             string                 `protobuf:"bytes,4,opt,name=ram,proto3" json:"ram,omitempty"`
	Case            string                 `protobuf:"bytes,5,opt,name=case,proto3" json:"case,omitempty"`
	Fans            string                 `protobuf:"bytes,6,opt,name=fans,proto3" json:"fans,omitempty"`
	CpuCooler       string                 `protobuf:"bytes,7,opt,name=cpu_cooler,json=cpuCooler,proto3" json:"cpu_cooler,omitempty"`
	Psu             string                 `protobuf:"bytes,8,opt,name=psu,proto3" json:"psu,omitempty"`
	Storage         string                 `protobuf:"bytes,9,opt,name=storage,proto3" json:"storage,omitempty"`
	Mouse           string                 `protobuf:"bytes,10,opt,name=mouse,proto3" json:"mouse,omitempty"`
	Keyboard        string                 `protobuf:"bytes,11,opt,name=keyboard,proto3" json:"keyboard,omitempty"`
	Monitor         string                 `protobuf:"bytes,12,opt,name=monitor,proto3" json:"monitor,omitempty"`
	IdUser          string                 `protobuf:"bytes,13,opt,name=id_user,json=idUser,proto3" json:"id_user,omitempty"`
	CpuCost         string                 `protobuf:"bytes,14,opt,name=cpu_cost,json=cpuCost,proto3" json:"cpu_cost,omitempty"`
	GpuCost         string                 `protobuf:"bytes,15,opt,name=gpu_cost,json=gpuCost,proto3" json:"gpu_cost,omitempty"`
	MotherBoardCost string                 `protobuf:"bytes,16,opt,name=mother_board_cost,json=motherBoardCost,proto3" json:"mother_board_cost,omitempty"`
	RamCost         string                 `protobuf:"bytes,17,opt,name=ram_cost,json=ramCost,proto3" json:"ram_cost,omitempty"`
	CaseCost        string                 `protobuf:"bytes,18,opt,name=case_cost,json=caseCost,proto3" json:"case_cost,omitempty"`
	FansCost        string                 `protobuf:"bytes,19,opt,name=fans_cost,json=fansCost,proto3" json:"fans_cost,omitempty"`
	CpuCoolerCost   string                 `protobuf:"bytes,20,opt,name=cpu_cooler_cost,json=cpuCoolerCost,proto3" json:"cpu_cooler_cost,omitempty"`
	PsuCost         string                 `protobuf:"bytes,21,opt,name=psu_cost,json=psuCost,proto3" json:"psu_cost,omitempty"`
	StorageCost     string                 `protobuf:"bytes,22,opt,name=storage_cost,json=storageCost,proto3" json:"storage_cost,omitempty"`
	MouseCost       string                 `protobuf:"bytes,23,opt,name=mouse_cost,json=mouseCost,proto3" json:"mouse_cost,omitempty"`
	KeyboardCost    string                 `protobuf:"bytes,24,opt,name=keyboard_cost,json=keyboardCost,proto3" json:"keyboard_cost,omitempty"`
	MonitorCost     string                 `protobuf:"bytes,25,opt,name=monitor_cost,json=monitorCost,proto3" json:"monitor_cost,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConfigMsgFull) Reset() {
	*x = ConfigMsgFull{}
	mi := &file_config_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigMsgFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMsgFull) ProtoMessage() {}

func (x *ConfigMsgFull) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMsgFull.ProtoReflect.Descriptor instead.
func (*ConfigMsgFull) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigMsgFull) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *ConfigMsgFull) GetGpu() string {
	if x != nil {
		return x.Gpu
	}
	return ""
}

func (x *ConfigMsgFull) GetMotherBoard() string {
	if x != nil {
		return x.MotherBoard
	}
	return ""
}

func (x *ConfigMsgFull) GetRam() string {
	if x != nil {
		return x.Ram
	}
	return ""
}

func (x *ConfigMsgFull) GetCase() string {
	if x != nil {
		return x.Case
	}
	return ""
}

func (x *ConfigMsgFull) GetFans() string {
	if x != nil {
		return x.Fans
	}
	return ""
}

func (x *ConfigMsgFull) GetCpuCooler() string {
	if x != nil {
		return x.CpuCooler
	}
	return ""
}

func (x *ConfigMsgFull) GetPsu() string {
	if x != nil {
		return x.Psu
	}
	return ""
}

func (x *ConfigMsgFull) GetStorage() string {
	if x != nil {
		return x.Storage
	}
	return ""
}

func (x *ConfigMsgFull) GetMouse() string {
	if x != nil {
		return x.Mouse
	}
	return ""
}

func (x *ConfigMsgFull) GetKeyboard() string {
	if x != nil {
		return x.Keyboard
	}
	return ""
}

func (x *ConfigMsgFull) GetMonitor() string {
	if x != nil {
		return x.Monitor
	}
	return ""
}

func (x *ConfigMsgFull) GetIdUser() string {
	if x != nil {
		return x.IdUser
	}
	return ""
}

func (x *ConfigMsgFull) GetCpuCost() string {
	if x != nil {
		return x.CpuCost
	}
	return ""
}

func (x *ConfigMsgFull) GetGpuCost() string {
	if x != nil {
		return x.GpuCost
	}
	return ""
}

func (x *ConfigMsgFull) GetMotherBoardCost() string {
	if x != nil {
		return x.MotherBoardCost
	}
	return ""
}

func (x *ConfigMsgFull) GetRamCost() string {
	if x != nil {
		return x.RamCost
	}
	return ""
}

func (x *ConfigMsgFull) GetCaseCost() string {
	if x != nil {
		return x.CaseCost
	}
	return ""
}

func (x *ConfigMsgFull) GetFansCost() string {
	if x != nil {
		return x.FansCost
	}
	return ""
}

func (x *ConfigMsgFull) GetCpuCoolerCost() string {
	if x != nil {
		return x.CpuCoolerCost
	}
	return ""
}

func (x *ConfigMsgFull) GetPsuCost() string {
	if x != nil {
		return x.PsuCost
	}
	return ""
}

func (x *ConfigMsgFull) GetStorageCost() string {
	if x != nil {
		return x.StorageCost
	}
	return ""
}

func (x *ConfigMsgFull) GetMouseCost() string {
	if x != nil {
		return x.MouseCost
	}
	return ""
}

func (x *ConfigMsgFull) GetKeyboardCost() string {
	if x != nil {
		return x.KeyboardCost
	}
	return ""
}

func (x *ConfigMsgFull) GetMonitorCost() string {
	if x != nil {
		return x.MonitorCost
	}
	return ""
}

type ParseReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Link          string                 `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseReq) Reset() {
	*x = ParseReq{}
	mi := &file_config_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseReq) ProtoMessage() {}

func (x *ParseReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseReq.ProtoReflect.Descriptor instead.
func (*ParseReq) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *ParseReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type ParseRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Price         string                 `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseRes) Reset() {
	*x = ParseRes{}
	mi := &file_config_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRes) ProtoMessage() {}

func (x *ParseRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRes.ProtoReflect.Descriptor instead.
func (*ParseRes) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{3}
}

func (x *ParseRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ParseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ParseRes) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *ParseRes) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type CreateConfigReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *ConfigMsg             `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConfigReq) Reset() {
	*x = CreateConfigReq{}
	mi := &file_config_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfigReq) ProtoMessage() {}

func (x *CreateConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfigReq.ProtoReflect.Descriptor instead.
func (*CreateConfigReq) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{4}
}

func (x *CreateConfigReq) GetConfig() *ConfigMsg {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateConfigRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConfigRes) Reset() {
	*x = CreateConfigRes{}
	mi := &file_config_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfigRes) ProtoMessage() {}

func (x *CreateConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfigRes.ProtoReflect.Descriptor instead.
func (*CreateConfigRes) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{5}
}

func (x *CreateConfigRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateConfigRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateConfigRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateConfigReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Config        *ConfigMsg             `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConfigReq) Reset() {
	*x = UpdateConfigReq{}
	mi := &file_config_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigReq) ProtoMessage() {}

func (x *UpdateConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigReq.ProtoReflect.Descriptor instead.
func (*UpdateConfigReq) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateConfigReq) GetConfig() *ConfigMsg {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateConfigRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Config        *ConfigMsg             `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConfigRes) Reset() {
	*x = UpdateConfigRes{}
	mi := &file_config_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigRes) ProtoMessage() {}

func (x *UpdateConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigRes.ProtoReflect.Descriptor instead.
func (*UpdateConfigRes) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateConfigRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateConfigRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateConfigRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateConfigRes) GetConfig() *ConfigMsg {
	if x != nil {
		return x.Config
	}
	return nil
}

type DeleteConfigReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConfigReq) Reset() {
	*x = DeleteConfigReq{}
	mi := &file_config_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigReq) ProtoMessage() {}

func (x *DeleteConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigReq.ProtoReflect.Descriptor instead.
func (*DeleteConfigReq) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteConfigRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConfigRes) Reset() {
	*x = DeleteConfigRes{}
	mi := &file_config_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigRes) ProtoMessage() {}

func (x *DeleteConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigRes.ProtoReflect.Descriptor instead.
func (*DeleteConfigRes) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteConfigRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteConfigRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteConfigRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetConfigReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigReq) Reset() {
	*x = GetConfigReq{}
	mi := &file_config_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReq) ProtoMessage() {}

func (x *GetConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReq.ProtoReflect.Descriptor instead.
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{10}
}

func (x *GetConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetConfigRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Config        *ConfigMsgFull         `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRes) Reset() {
	*x = GetConfigRes{}
	mi := &file_config_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRes) ProtoMessage() {}

func (x *GetConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRes.ProtoReflect.Descriptor instead.
func (*GetConfigRes) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{11}
}

func (x *GetConfigRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetConfigRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetConfigRes) GetConfig() *ConfigMsgFull {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetConfigsBuUserReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IdUser        string                 `protobuf:"bytes,1,opt,name=id_user,json=idUser,proto3" json:"id_user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigsBuUserReq) Reset() {
	*x = GetConfigsBuUserReq{}
	mi := &file_config_config_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigsBuUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigsBuUserReq) ProtoMessage() {}

func (x *GetConfigsBuUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigsBuUserReq.ProtoReflect.Descriptor instead.
func (*GetConfigsBuUserReq) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{12}
}

func (x *GetConfigsBuUserReq) GetIdUser() string {
	if x != nil {
		return x.IdUser
	}
	return ""
}

type GetConfigsBuUserRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Configs       []*ConfigMsgFull       `protobuf:"bytes,3,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigsBuUserRes) Reset() {
	*x = GetConfigsBuUserRes{}
	mi := &file_config_config_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigsBuUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigsBuUserRes) ProtoMessage() {}

func (x *GetConfigsBuUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigsBuUserRes.ProtoReflect.Descriptor instead.
func (*GetConfigsBuUserRes) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{13}
}

func (x *GetConfigsBuUserRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetConfigsBuUserRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetConfigsBuUserRes) GetConfigs() []*ConfigMsgFull {
	if x != nil {
		return x.Configs
	}
	return nil
}

var File_config_config_proto protoreflect.FileDescriptor

var file_config_config_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xa3, 0x02,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x70, 0x75, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x73, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x73, 0x75, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x75, 0x73, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x22, 0xc4, 0x05, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73,
	0x67, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x70, 0x75, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x70, 0x75, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f,
	0x6f, 0x6c, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x70, 0x75, 0x43,
	0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x73, 0x75, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x73, 0x75, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x75, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x73,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6d, 0x5f,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x6d, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x6f, 0x6c, 0x65,
	0x72, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x73, 0x75, 0x5f, 0x63, 0x6f, 0x73,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x73, 0x75, 0x43, 0x6f, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x73,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x08, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x6a, 0x0a, 0x08, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x3c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x55, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x21, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x55, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c,
	0x6c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42, 0x75, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42, 0x75, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x32, 0x85, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2b, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x73, 0x65, 0x12, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12,
	0x40, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12,
	0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42, 0x75, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42, 0x75, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x42, 0x75, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x42, 0x33, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x65, 0x74, 0x55,
	0x70, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_config_config_proto_rawDescOnce sync.Once
	file_config_config_proto_rawDescData []byte
)

func file_config_config_proto_rawDescGZIP() []byte {
	file_config_config_proto_rawDescOnce.Do(func() {
		file_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_config_proto_rawDesc), len(file_config_config_proto_rawDesc)))
	})
	return file_config_config_proto_rawDescData
}

var file_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_config_config_proto_goTypes = []any{
	(*ConfigMsg)(nil),           // 0: config.ConfigMsg
	(*ConfigMsgFull)(nil),       // 1: config.ConfigMsgFull
	(*ParseReq)(nil),            // 2: config.ParseReq
	(*ParseRes)(nil),            // 3: config.ParseRes
	(*CreateConfigReq)(nil),     // 4: config.CreateConfigReq
	(*CreateConfigRes)(nil),     // 5: config.CreateConfigRes
	(*UpdateConfigReq)(nil),     // 6: config.UpdateConfigReq
	(*UpdateConfigRes)(nil),     // 7: config.UpdateConfigRes
	(*DeleteConfigReq)(nil),     // 8: config.DeleteConfigReq
	(*DeleteConfigRes)(nil),     // 9: config.DeleteConfigRes
	(*GetConfigReq)(nil),        // 10: config.GetConfigReq
	(*GetConfigRes)(nil),        // 11: config.GetConfigRes
	(*GetConfigsBuUserReq)(nil), // 12: config.GetConfigsBuUserReq
	(*GetConfigsBuUserRes)(nil), // 13: config.GetConfigsBuUserRes
}
var file_config_config_proto_depIdxs = []int32{
	0,  // 0: config.CreateConfigReq.config:type_name -> config.ConfigMsg
	0,  // 1: config.UpdateConfigReq.config:type_name -> config.ConfigMsg
	0,  // 2: config.UpdateConfigRes.config:type_name -> config.ConfigMsg
	1,  // 3: config.GetConfigRes.config:type_name -> config.ConfigMsgFull
	1,  // 4: config.GetConfigsBuUserRes.configs:type_name -> config.ConfigMsgFull
	2,  // 5: config.Config.Parse:input_type -> config.ParseReq
	4,  // 6: config.Config.CreateConfig:input_type -> config.CreateConfigReq
	6,  // 7: config.Config.UpdateConfig:input_type -> config.UpdateConfigReq
	8,  // 8: config.Config.DeleteConfig:input_type -> config.DeleteConfigReq
	10, // 9: config.Config.GetConfig:input_type -> config.GetConfigReq
	12, // 10: config.Config.GetConfigsBuUser:input_type -> config.GetConfigsBuUserReq
	3,  // 11: config.Config.Parse:output_type -> config.ParseRes
	5,  // 12: config.Config.CreateConfig:output_type -> config.CreateConfigRes
	7,  // 13: config.Config.UpdateConfig:output_type -> config.UpdateConfigRes
	9,  // 14: config.Config.DeleteConfig:output_type -> config.DeleteConfigRes
	5,  // 15: config.Config.GetConfig:output_type -> config.CreateConfigRes
	13, // 16: config.Config.GetConfigsBuUser:output_type -> config.GetConfigsBuUserRes
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_config_config_proto_init() }
func file_config_config_proto_init() {
	if File_config_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_config_proto_rawDesc), len(file_config_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_config_proto_goTypes,
		DependencyIndexes: file_config_config_proto_depIdxs,
		MessageInfos:      file_config_config_proto_msgTypes,
	}.Build()
	File_config_config_proto = out.File
	file_config_config_proto_goTypes = nil
	file_config_config_proto_depIdxs = nil
}
